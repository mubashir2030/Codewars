Write a class that, when given a string, will return an uppercase string with each letter shifted forward in the alphabet by however many spots the cipher was initialized to.

For example:

c = CaesarCipher(5); # creates a CipherHelper with a shift of five
c.encode('Codewars') # returns 'HTIJBFWX'
c.decode('BFKKQJX') # returns 'WAFFLES'
If something in the string is not in the alphabet (e.g. punctuation, spaces), simply leave it as is.
The shift will always be in range of [1, 26].







alp = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
class CaesarCipher(object):
    def __init__(self, shift):
        self.s = shift

    def encode(self, st):
        return ''.join(alp[(alp.index(i)+self.s)%26] if i in alp else i for i in st.upper())
        
    def decode(self, st):
        return ''.join(alp[(alp.index(i)-self.s)%26] if i in alp else i for i in st.upper())
